<?php
/**
 * 功能：支付宝生成二维码
 * 版本：v1.0
 * author：wangkk
 * 以下部分就是具体的生成二维码过程，只需要引入自己的配置文件$config数组信息，同时需要获取订单信息即可使用
 */

//引入sdk文件
namespace app\task\controller;

use think\facade\Config;
use Payment\Client\Charge;
use think\Db;
use think\Request;
use think\facade\Log;
use think\Session;

class PayController extends BaseController
{
    public $config;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        require_once(__EXTEND__ . '/alipay/pagepay/service/AlipayTradeService.php');
        require_once(__EXTEND__ . '/alipay/pagepay/buildermodel/AlipayTradePagePayContentBuilder.php');
        $this->config = Config::get('config.alipay');
    }

    public function index()
    {
        return $this->fetch();
    }

    /**
     * 调起支付宝支付二维码
     * @param Request $request
     * @throws \Exception
     */
    public function alipay(Request $request)
    {
        $total_amount = $request->param('money', 11);//付款金额，必填
        $pay_type = $request->param('pay_type', 1);
//
        //商户订单号，商户网站订单系统中唯一订单号，
        $out_trade_no = date('YmdHis') . rand(10000000, 99999999);
        //订单名称，必填
        $subject = "流量币充值";
        //商品描述，可空
        $body = '流量币充值';
        //构造参数
        $payRequestBuilder = new \AlipayTradePagePayContentBuilder();
        $payRequestBuilder->setBody($body);
        $payRequestBuilder->setSubject($subject);
        $payRequestBuilder->setTotalAmount($total_amount);
        $payRequestBuilder->setOutTradeNo($out_trade_no);
        $aop = new \AlipayTradeService($this->config);

        $member_info = session('member');
        if (!$member_info) {
            $this->error('未登录');
        }
        $save_data = [
            'member_id' => $member_info['member_id'],
            'pay_type' => $pay_type,
            'order_sn' => $out_trade_no,
            'pay_state' => '0',
            'amount' => $total_amount,
            'pay_source' => "支付宝网页支付",
            'add_time' => time(),
            'describe' => $body,
        ];
        $id = Db::name('recharge_order')->insertGetId($save_data);
        if (!$id) {
            $this->error('订单生成失败');
        }
        Log::write("异步回调地址");
        Log::write($this->config['notify_url']);
        $response = $aop->pagePay($payRequestBuilder, $this->config['return_url'], $this->config['notify_url']);
       // $response = $aop->pagePay($payRequestBuilder, $this->config['return_url'], $this->config['notify_url']);
       // dump($request);
        //var_dump($response);
       echo $response;


    }

    /**
     * 支付宝同步处理
     * @param Request $request
     * @return \think\response\Redirect
     * @throws \Exception
     */
    public function return_url(Request $request)
    {
        $data = $request->param();
        $alipaySevice = new \AlipayTradeService($this->config);
        $result = $alipaySevice->check($data);
        if ($result) {
            //支付成功跳转
            return redirect("http://test.wandoull.com/task/app/index.html");
        } else {
            $this->error('订单异常');
        }
    }





}


