<?php

namespace app\task\controller;

use app\admin\model\ApiType;
use app\task\model\Task;
use think\Controller;
use think\Db;
use think\Request;
use think\Validate;
use function GuzzleHttp\json_decode;

class BaseController extends Controller
{
     public function initialize()
     {
        parent::initialize(); // TODO: Change the autogenerated stub
         define('SITE_URL',$_SERVER['HTTP_HOST']);
         if (!session('?member')){
             $this->redirect('home/free/login');
         }
     }
     protected  $error;
     protected  $consume;
     // 获取商品信息
     public function  get_goods_info(){
         if(isset($_GET['url'])){

               $content = file_get_contents($_GET['url']);
               $content = iconv("gb2312","utf-8//IGNORE",$content);
                 preg_match('/\<title\>(.*)\<\/title\>/U', $content,$title);
                 preg_match('/(?<=meta name=\"keywords\" content=\").*?(?=\")/', $content,$keywords);

              return json(['title'=>$title[1],'keywords'=>$keywords[0]]);
         }
     }
        // 扣费
     private function deduction($uid,$price){

     }
    // 记录任务日志
     private function record(array $data){


     }

    // 参数验证
     private function build_router($data){
         $router = [];
         $msg = [];
         foreach ($data as $datum) {
             $validate = json_decode($datum['validate'],true);
                $router_string = array_column($validate,'router');
             if ($datum['field_source'] == 2){
                 $router[$datum['parameter_name']] =join('|',$router_string);
             }else{
                  $router[$datum['parameter_name']] =join('|',$router_string);
             }
             foreach ($validate as $item){
                 if ($datum['field_source'] == 2){
                     $msg[$datum['parameter_name'].'.'.$item['router']] =$item['tips'];
                 }else{
                     $msg[$datum['parameter_name'].'.'.$item['router']] =$item['tips'];
                 }
             }

        }
        return array('router'=>$router,'tips'=>$msg);
     }

public function execute(){
        $reply =[
            'code' =>0,
            'msg'=>'执行成功',
            'consume'=>0,
        ];
        ini_set('date.timezone','Asia/Shanghai');
       $post_data = input('post.');
       $task_type = $post_data['task_type'];
         // 查询任务类型
       $task_type = Db::name('api_type')->where(['api'=>$task_type])->find();
        // 查询字段
       $task_field  =Db::name('task_field')->leftJoin('w_api_parameter','w_task_field.parameter_id=w_api_parameter.parameter_id')->where(['api_type_id'=>$task_type['api_type_id']])->select();
        // 查询价格
       $task_consume =Db::name('consume')->where(['level_id'=>session('member.member_level_id'),'api_type_id'=>$task_type['api_type_id']])->find();
        // 查询api厂商
        $api_firm = Db::name('api_firm')->where(['api_firm_id'=>6])->find();
          // 公共参数
        $api_public_parameter = json_decode($api_firm['api_public_parameter'],true);
      // 构建参数
      $validate  = $this->build_router($task_field);
      $task_field = $this->build_param($post_data,$task_field,$api_public_parameter);
      foreach ($task_field as $key => $value) {
          $validate = new Validate($validate['router'],$validate['tips']);
          $result   = $validate->check($value);
          if(!$result){
             $reply['code'] = 400;
             $reply['msg'] = $validate->getError();
          }
             $response =   $this->GET($api_firm['api_address'],$task_type['api_path'],$value);
      }

      return json($reply);
    }
public function build_param(array $param,$to_param,$attach){
         $build = [];

        foreach($param['task'] as $index=>$item){
           foreach ($item as $key => $value) {
              $build[$index][$key]=$value;
            }
            foreach ($param as $key => $val) {
              if($key == 'task'){
                continue;
              }
              $build[$index][$key]=$val;
            }
        }
        $build_data = [];
        foreach ($build as $key => &$value) {
             foreach ($to_param as $k => $v) {
               $field_name =  $v['field_name'];
               $parameter_name =  $v['parameter_name'];
               if ($v['field_source'] == 2) {
                 $build_data[$key][$parameter_name]=$v['field_val'];
               }
               if ($v['field_source'] == 1) {
                  if ($v['field_type'] == 2) {
                    $value[$field_name] = join(',',$value[$field_name]);
                  }
                $build_data[$key][$parameter_name] =$value[$field_name];
                  unset($build[$key][$field_name]);
               }
             }
              foreach ($attach as $item) {
                preg_match_all ("/<\[(.*)\]>/U", $item['value'], $pat_array);
                   $val = $item['value'];
                  foreach($pat_array[1] as $k=> $value ){
                    $v = ['time'=>time()];
                    $val  =str_replace($pat_array[0][$k],$v[$value],$item['value']);
                    }
                    $build_data[$key][$item['name']]  = $val;
                 }
        }
        return  $build_data;
    }
    public  function GET($url,$path,$params){
           $token =  $params['signkey'];
            unset($params['signkey']);
             ksort($params);
             $encode=  http_build_query($params);
             $encode_after =$path.'?'.urldecode($encode).'&'.$token;
             $encode = urlencode($encode_after);
             $md5  =  md5($encode);
                $url = sprintf('%s%s? ',$url,$path);
                $l = '';
                foreach($params as $key=>$val){
                     $l.=sprintf('%s=%s&',$key,urlencode($val));
                }
               $l.= sprintf('signkey=%s',$md5 );
                $ops=array(
                    'http'=>array(
                    'method'=>'POST',
                    'header'=>
                          "Content-Type: application/x-www-form-urlencoded\r\n".
                          "Content-length:".strlen( $l)."\r\n",
                    'content'=> $l,
                    )
                );
                $context=stream_context_create($ops);
               $result = file_get_contents($url,false,$context);
              return $result;
        }


}
